---
- hosts: all
  tasks:
    - name: Performing backups using Cumulus config-backup
      become: true
      shell: /usr/cumulus/bin/config-backup
      register: bkcfg

    - debug:
        msg: "Hello world {{ bkcfg.stdout.split(':')[2].split(' ')[3] }}"

    - name: Fetch files to secure backup
      become: true
      fetch:
        src: "{{ bkcfg.stdout.split(':')[2].split(' ')[3] }}"
        dest: backup/{{ ansible_hostname }}/config/
        flat: yes

    - name: Backing up /etc/cumulus/ports.conf
      fetch:
        src: /etc/cumulus/ports.conf
        dest: backup/{{ ansible_hostname }}/ports.conf
        flat: yes

    - name: Backing up /etc/network/interfaces
      fetch:
        src: /etc/network/interfaces
        dest: backup/{{ ansible_hostname }}/interfaces
        flat: yes

    - name: Checking /etc/frr/daemons
      become: true
      stat:
        path: /etc/frr/daemons
      register: frr_daemons

    - name: Backing up /etc/frr/daemons
      when: frr_daemons.stat.exists == true
      become: true
      fetch:
        src: /etc/frr/daemons
        dest: backup/{{ ansible_hostname }}/daemons
        flat: yes
      ignore_errors: yes

    - name: Checking for /etc/frr/frr.conf
      become: true
      stat:
        path: /etc/frr/frr.conf
      register: frr_conf
    - debug:
        msg: "Hello World {{ frr_conf }}"

    - name: Backup /etc/frr/frr.conf
      when: frr_conf.stat.exists == true
      become: true
      fetch:
        src: /etc/frr/frr.conf
        dest: backup/{{ ansible_hostname }}/frr.conf
        flat: yes
      ignore_errors: yes

    - name: "Check if pam_radius config exists"
      stat:
        path: /etc/pam_radius_auth.conf
      register: radius_conf

    - name: "Check if snmpd config exists"
      stat:
        path: /etc/snmp/snmpd.conf
      register: snmpd_conf

    - name: "BACKUP RADIUS config"
      when: radius_conf.stat.exists == true
      fetch:
        src: /etc/pam_radius_auth.conf
        dest: backup/{{ansible_hostname}}/
        flat: yes

    - name: "BACKUP SNMPD config"
      when: radius_conf.stat.exists == true
      fetch:
        src: /etc/pam_radius_auth.conf
        dest: backup/{{ansible_hostname}}/
        flat: yes
    - name: Backing up Cumulus switches on 3.7
      become: true
      ansible.posix.synchronize:
        src: /etc/
        dest: backup/{{ansible_hostname}}/etc/
      tags: sync
